package com.jebussystems.levelingglass.util;

import org.apache.commons.pool.BasePoolableObjectFactory;

public abstract class PoolableMessageFactory<T extends PoolableMessage> extends BasePoolableObjectFactory<T>
{
	// /////////////////////////////////////////////////////////////////////////
	// constants
	// /////////////////////////////////////////////////////////////////////////

	private static final String TAG = "util.poolablemessagefactory";

	// /////////////////////////////////////////////////////////////////////////
	// types
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// class variables
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// object variables
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// static initialization
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// constructors
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// public methods
	// /////////////////////////////////////////////////////////////////////////

	// /////////////////////////////////////////////////////////////////////////
	// BasePoolableObjectFactory overrides
	// /////////////////////////////////////////////////////////////////////////

	@Override
	public void passivateObject(T message)
	{
		LogWrapper.v(TAG, "PoolableMessageFactory::passivateObject enter",
		        "this=", this, "message=", message);
		message.release();
		LogWrapper.v(TAG, "PoolableMessageFactory::passivateObject exit");
	}
	
	// /////////////////////////////////////////////////////////////////////////
	// inner classes
	// /////////////////////////////////////////////////////////////////////////

}
